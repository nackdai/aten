name: CI

on:
  pull_request:
    branches:
      - '*'
    paths-ignore:
      - '.devcontainer/**'
      - '.gitignore'
      - '.dockerignore'
      - 'asset/**'
      - 'gallery/**'
      - 'vs2019/**'
      - '**.md'
  push:
    branches:
      - 'main'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_docker:
    name: build_docker
    runs-on: ubuntu-20.04
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get diff files
        id: getfile
        run: |
          git fetch origin main
          files=$(git diff origin/main HEAD --name-only 2>/dev/null)
          diff_files=($(echo ${files}))
          echo "${diff_files[@]}"
          echo "diff_files=${diff_files[@]}" >> $GITHUB_OUTPUT

      - name: Check diff files
        if: contains(steps.getfile.outputs.diff_files, 'env/') == false
        run: |
          echo "Nothing to build docker image"
          exit 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Run the following step if Dockerfile is modified.
      - name: Build images
        id: build_image
        run: |
          ./env/build_docker_Image.sh -b ./env/ -t "ghcr.io/${{ github.repository }}/"

      - name: Push images
        run: |
          docker push ghcr.io/${{ github.repository }}/aten:latest
          docker push ghcr.io/${{ github.repository }}/aten_dev:latest

          nvidia_cudagl_tag=$(docker images "ghcr.io/${{ github.repository }}/nvidia/cudagl" --format "{{.Tag}}")
          docker push "ghcr.io/${{ github.repository }}/nvidia/cudagl:${nvidia_cudagl_tag}"

  ci:
    name: ci
    runs-on: ubuntu-20.04
    needs: build_docker
    container:
      image: ghcr.io/${{ github.repository }}/aten_dev:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Set permission
        shell: bash
        run: |
          chown -R $(id -u):$(id -g) ${GITHUB_WORKSPACE}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: lint
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
          pre-commit run -a

      - name: Configure
        run: |
          mkdir -p build
          cd build
          cp ../scripts/RunCMake.sh ./
          ./RunCMake.sh Release 75

      - name: Build
        run: |
          cd build
          ninja -j 4

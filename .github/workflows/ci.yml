name: CI

on:
  pull_request:
    branches:
      - '*'
    paths-ignore:
      - '.devcontainer/**'
      - '.gitignore'
      - '.dockerignore'
      - 'asset/**'
      - 'gallery/**'
      - 'vs2019/**'
      - '**.md'
  push:
    branches:
      - 'main'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  checck_diff:
    name: checck_diff
    runs-on: ubuntu-20.04
    outputs:
      sbould_build_image: ${{ steps.check_diff_File.outputs.sbould_build_image }}
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check diff files
        id: check_diff_File
        run: |
          git fetch origin main
          files=$(git diff origin/main HEAD --name-only 2>/dev/null)
          diff_files=($(echo ${files}))
          echo "${diff_files[@]}"
          if [[ "${diff_files[@]}" == *"docker/"* ]]; then
            echo "sbould_build_image=true" >> $GITHUB_OUTPUT
          else
            echo "sbould_build_image=false" >> $GITHUB_OUTPUT
          fi

  build_docker:
    name: build_docker
    runs-on: ubuntu-20.04
    needs: checck_diff
    if: contains(needs.checck_diff.outputs.sbould_build_image, 'true')
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        id: login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check docker image build time
        id: check_image_time
        continue-on-error: true
        run: |
          docker pull ghcr.io/${{ github.repository }}/aten
          file_change_date=$(TZ=UTC git log -1 --pretty="format:%cd" --date=format-local:"%Y%m%d%H%M%S" ./docker/)
          image_build_date=$(docker inspect -f '{{ .Created }}' ghcr.io/${{ github.repository }}/aten | xargs -i date --utc --date="{}" +"%Y%m%d%H%M%S")
          echo "File [${file_change_date}] DockerImage [${image_build_date}]"
          if [[ "${file_change_date}" < "${image_build_date}" ]]; then
            echo "Docker images are already latest"
            exit 1
          fi

      # Run the following step if Dockerfile is modified.
      - name: Build images
        id: build_image
        if: ${{ steps.check_image_time.outcome == 'success' }}
        run: |
          ./docker/build_docker_Image.sh -b ./docker/ -p "ghcr.io/${{ github.repository }}/"

      - name: Push images
        if: ${{ steps.build_image.outcome == 'success' }}
        run: |
          docker push ghcr.io/${{ github.repository }}/aten:latest
          docker push ghcr.io/${{ github.repository }}/aten_dev:latest
          nvidia_cudagl_tag=$(docker images "ghcr.io/${{ github.repository }}/nvidia/cudagl" --format "{{.Tag}}")
          docker push "ghcr.io/${{ github.repository }}/nvidia/cudagl:${nvidia_cudagl_tag}"

  ci:
    name: ci
    runs-on: ubuntu-20.04
    needs: build_docker
    if: ${{ ! failure() }}
    container:
      image: ghcr.io/${{ github.repository }}/aten_dev:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Set permission
        shell: bash
        run: |
          chown -R $(id -u):$(id -g) ${GITHUB_WORKSPACE}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: lint
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
          pre-commit run -a

      - name: Configure
        run: |
          mkdir -p build
          cd build
          cp ../scripts/RunCMake.sh ./
          ./RunCMake.sh Release 75

      - name: Build
        run: |
          cd build
          ninja -j 4

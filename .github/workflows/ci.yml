name: CI

on:
  workflow_dispatch: {}
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'main'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_diff:
    name: check_diff
    runs-on: ubuntu-22.04
    outputs:
      should_build_image: ${{ steps.check_change_docker_file.outputs.should_build_image }}
      should_build_source: ${{ steps.changed_files_to_build_source.outputs.any_modified }}
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # NOTE:
      # https://github.com/actions/runner-images/issues/1281
      # Check if the specified files are changed.
      - name: Check changed files to build
        id: changed_files_to_build_source
        uses: step-security/changed-files@v46
        with:
          files_ignore: |
            .devcontainer/**
            .dockerignore
            .github/win_ci.yml
            .gitignore
            .home/**
            asset/**
            docker/windows/**
            gallery/**
            python/**
            vs_projects/**
            **.md

      - name: Check if Dockerfiles are changed
        id: check_change_docker_file
        uses: step-security/changed-files@v46
        with:
          files: |
            docker/**/Dockerfile
            docker/build_docker_image.sh

      - name: Display changed files
        run: |
          echo "::notice::Changed files to build source: ${{ steps.changed_files_to_build_source.outputs.all_modified_files }}"
          echo "::notice::Changed files to build Docker image: ${{ steps.check_change_docker_file.outputs.all_modified_files }}"

      - name: Login to GitHub Container Registry
        id: login
        if: ${{ steps.check_change_docker_file.outputs.any_modified == 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Compare the last modified time of the docker directory and the created time of the docker image as unit time.
      - name: Check docker image build time
        id: check_image_time
        if: ${{ steps.check_change_docker_file.outputs.any_modified == 'true' }}
        continue-on-error: true
        run: |
          docker pull ghcr.io/${{ github.repository }}/aten
          file_change_date=$(git log -1 --pretty="format:%ct" ./docker/)
          image_build_date=$(docker inspect -f '{{ .Created }}' ghcr.io/${{ github.repository }}/aten | xargs -i date --utc --date="{}" +%s)
          echo "::notice::File [${file_change_date}] DockerImage [${image_build_date}]"
          if [[ "${file_change_date}" -gt "${image_build_date}" ]]; then
            echo "::notice::Docker image should be rebuilt."
            echo "should_build_image=true" >> $GITHUB_OUTPUT
          else
            echo "::notice::No need to rebuild the Docker image."
            echo "should_build_image=false" >> $GITHUB_OUTPUT
          fi

  build_docker:
    name: build_docker
    runs-on: ubuntu-22.04
    needs: check_diff
    if: ${{ needs.check_diff.outputs.should_build_image == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      # Run the following step if Dockerfile is modified.
      - name: Build images
        id: build_image
        run: |
          ./docker/build_docker_image.sh -b ./docker/ -p "ghcr.io/${{ github.repository }}/"

      - name: Push images
        run: |
          docker push ghcr.io/${{ github.repository }}/aten:latest
          docker push ghcr.io/${{ github.repository }}/aten_dev:latest

  check_build_trigger:
    name: check_build_trigger
    runs-on: ubuntu-22.04
    needs: check_diff
    outputs:
      should_run_build: ${{ steps.set_ci_trigger.outputs.should_run_build }}
    if: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: Set CI trigger
        id: set_ci_trigger
        run: |
          if [[ "${{ needs.check_diff.outputs.should_build_source }}" == 'true' || "${{ needs.check_diff.outputs.should_build_image }}" == 'true' ]]; then
            echo "should_run_build=true" >> $GITHUB_OUTPUT
          else
            echo "should_run_build=false" >> $GITHUB_OUTPUT
          fi

  ci:
    name: ci
    runs-on: ubuntu-22.04
    needs: [build_docker, check_build_trigger]
    if: ${{ ! failure() }}
    container:
      image: ghcr.io/${{ github.repository }}/aten_dev:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Set permission
        shell: bash
        run: |
          chown -R $(id -u):$(id -g) ${GITHUB_WORKSPACE}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: lint
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
          pre-commit run -a

      - name: Configure
        if: ${{ needs.check_build_trigger.outputs.should_run_build == 'true' }}
        run: |
          mkdir -p build
          cd build
          cp ../tools/RunCMake.sh ./
          ./RunCMake.sh Release 75

      - name: Build
        if: ${{ needs.check_build_trigger.outputs.should_run_build == 'true' }}
        run: |
          cd build
          ninja -j 4
